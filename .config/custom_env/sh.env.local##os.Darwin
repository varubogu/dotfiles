#!/bin/zsh

# System Directories
export MAC_DIR_APPLICATIONS="/Applications"

# User Directories
export MAC_DIR_DOWNLOADS="$HOME/Downloads"
export MAC_DIR_DOCUMENTS="$HOME/Documents"
export MAC_DIR_MUSIC="$HOME/Music"
export MAC_DIR_PICTURES="$HOME/Pictures"
export MAC_DIR_VIDEOS="$HOME/Videos"
export MAC_DIR_DESKTOP="$HOME/Desktop"
export MAC_DIR_LIBRARY="$HOME/Library"
export MAC_DIR_USER_APPLICATIONS="$HOME/Application"

# User Library Directories
export MAC_DIR_USER_APPLICATION_SUPPORT="$MAC_DIR_LIBRARY/Application Support"
export MAC_DIR_USER_CACHES="$MAC_DIR_LIBRARY/Caches"
export MAC_DIR_USER_PREFERENCES="$MAC_DIR_LIBRARY/Preferences"
export MAC_DIR_USER_LOGS="$MAC_DIR_LIBRARY/Logs"
export MAC_DIR_USER_FONTS="$MAC_DIR_LIBRARY/Fonts"
export MAC_DIR_USER_APP_STATE="$MAC_DIR_LIBRARY/Saved Application State"
export MAC_DIR_USER_LAUNCH_AGENTS="$MAC_DIR_LIBRARY/LaunchAgents"
export MAC_DIR_USER_SERVICES="$MAC_DIR_LIBRARY/Services"

# Homebrew
BREW_BIN="/opt/homebrew/bin"
add_before_path "$BREW_BIN"
BREW_SHELL="$BREW_BIN/brew"
if [ -x "$BREW_SHELL" ]; then
    eval "$($BREW_SHELL shellenv)"
else
    echo "Brew not found"
fi

# Use 1Password's SSH agent
if [ -S ~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock ]; then
    export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock
fi

# volta
if [ -d "$HOME/.volta" ]; then
    export VOLTA_HOME="$HOME/.volta"
    export PATH="$VOLTA_HOME/bin:$PATH"
fi



add_before_path \
    "/opt/homebrew/opt/qt/bin" \
    "/opt/homebrew/opt/openjdk/bin"

add_after_path \
    "$HOME/Library/Application Support/JetBrains/Toolbox/scripts"

source "$HOME/.orbstack/shell/init.zsh" 2>/dev/null || :

if command -v asdf &> /dev/null; then
    if command -v brew &> /dev/null; then
        export ASDF_DIR="$(brew --prefix asdf)"
        source "$ASDF_DIR/libexec/asdf.sh"
    else
        export ASDF_DIR="$HOME/.asdf"
    fi
fi
