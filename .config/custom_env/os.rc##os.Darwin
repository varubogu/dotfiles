#!/bin/zsh

# Add Homebrew Group to PATH
if command -v "brew" &> /dev/null; then
    eval "$(brew shellenv)"
fi

# Use 1Password's SSH agent
SSH_1PASSWORD_AGENT_SOCK=$HOME/.1Password/agent.sock
if [ -S $SSH_1PASSWORD_AGENT_SOCK ]; then
    export SSH_AUTH_SOCK=$SSH_1PASSWORD_AGENT_SOCK
fi


# Homebrew aliases and settings
if command -v brew &> /dev/null; then
    alias brewup='brew update && brew upgrade'
fi

if [ -d $HOME/.orbstack/shell ]; then
    source $HOME/.orbstack/shell/init.zsh 2>/dev/null || :
# TODO: XDG Base Directory Specification?
# elif [ -d $HOME/.orbstack/shell ]; then
#     source $HOME/.orbstack/shell/init.zsh 2>/dev/null || :
fi

if command -v mise &> /dev/null; then
    export MISE_COMMAND_DIR="/opt/homebrew/bin"
    export MISE_COMMAND="$MISE_COMMAND_DIR/mise"
    export MISE_DIR="$HOME/.mise"
    # ↓`mise activate`
    export MISE_SHELL=zsh
    export __MISE_ORIG_PATH="$PATH"

    mise() {
        local command
        command="${1:-}"
        if [ "$#" = 0 ]; then
            command "$MISE_COMMAND"
            return
        fi
        shift

        case "$command" in
            deactivate|shell|sh)
                # if argv doesn't contains -h,--help
                if [[ ! " $@ " =~ " --help " ]] && [[ ! " $@ " =~ " -h " ]]; then
                    eval "$(command "$MISE_COMMAND" "$command" "$@")"
                    return $?
                fi
                ;;
        esac
        command "$MISE_COMMAND" "$command" "$@"
    }

    _mise_hook() {
        eval "$($MISE_COMMAND hook-env -s zsh)";
    }
    typeset -ag precmd_functions;
    if [[ -z "${precmd_functions[(r)_mise_hook]+1}" ]]; then
        precmd_functions=( _mise_hook ${precmd_functions[@]} )
    fi
    typeset -ag chpwd_functions;
    if [[ -z "${chpwd_functions[(r)_mise_hook]+1}" ]]; then
        chpwd_functions=( _mise_hook ${chpwd_functions[@]} )
    fi

    _mise_hook
    if [ -z "${_mise_cmd_not_found:-}" ]; then
        _mise_cmd_not_found=1
        [ -n "$(declare -f command_not_found_handler)" ] && eval "${$(declare -f command_not_found_handler)/command_not_found_handler/_command_not_found_handler}"

        function command_not_found_handler() {
            if [[ "$1" != "mise" && "$1" != "mise-"* ]] && /opt/homebrew/bin/mise hook-not-found -s zsh -- "$1"; then
                _mise_hook
                "$@"
            elif [ -n "$(declare -f _command_not_found_handler)" ]; then
                _command_not_found_handler "$@"
            else
                echo "zsh: command not found: $1" >&2
                return 127
            fi
        }
    fi
    # ↑`mise activate`

fi
